# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url=jdbc:mysql://localhost:3306/jpa_many_to_many?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#spring.datasource.username=root
#spring.datasource.password=
#
#spring.jpa.show-sql=true
#
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#
## Hibernate
#
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update
#
#server.port = 8089
#
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE



# FOR POSTGRE


spring.datasource.url=jdbc:postgresql://localhost:8080/jpa_many_to_many
spring.datasource.username=postgres
spring.datasource.password=ricebowl
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL81Dialect
#spring.datasource.hikari.maximum-pool-size=10


server.port = 8001